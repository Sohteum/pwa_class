sass-> css전처리기 
scss에서 발전한 형태
css가 생성되기 전에 스크립트로 생성해서 ....

먼저 익스텐션이 필요함

1. 라이브서버가 선인스톨
2. Live Sass Compiler
3. Live Sass Compiler
4. 셋팅 제이슨 파일 추가 셋팅의 상단우측에 있음
5. "liveSassCompile.settings.autoprefix": null
쉼표하고 붙여넣기. 저장

스타일닷사스를 만듦
하단에 워치사스가 있는데 이걸 눌러야됨.
그럼 안만들어도 스타일.css가 생김
기존과 똑같이 링크 연결

사실 자바스크립트라고 생각하면됨. css처럼 생긴
.map파일은 크롬같은데서 요소검사할때 사스에다가 요소검사할 수 있게 해주는것
호스팅 업로드시에는 지워도 상관없지만 작업할때는 필요함


//주석을 사용할 수 있음
더블주석쓸수있으니까넘편해

///////////////////////////////////////////////////////////////
1. 선택자
(nested 중첩. 괄호안에 괄호)

수정관리용이함. 선택자 수도 줄어들고 틀려도 하나만 수정하면 되니까

2. 부모선택자
parent 선택자
원래 css에서는 부모선택을 못함
& ->자기가 포함된 중괄호의 선택자를 말함 그래서 부모선택자라고 함
뭐..정확히 말하면 부모는 아님


3. 변수선언
cssㅇ에 변수가 없던시절 나옴.
변수는 되도록이면 한 파일 내에서 사용하는 것이 좋다. 임폴트하지말자.

4. ㄱ전역변수선언하기?처럼 여러 파일에서 공통으로 사용하는 파일을 만들때
외부파일에서 선언한 사스변수를 호출하려면 
임폴트하는 파일은 일반 css를 적으면 안됨.

음 결국은 여러파일에서 공통으로 사용되는 변수는 inmport를 사용하지 않는것이 좋다. 
루트로 선언한 것들은 그냥 저장하면 먹히는데,
사스로 선언한 변수를 임폴트하면 내가 사용한 모든 파일에 가서 저장을 해줘야함
번거롭기때문에 한 파일 내에서만 사용하는것으로 하고 


5. 보간법
자바스크립트의 템플릿리터럴즈처럼 #{변수명}을 사용함
{}안에서는 곱셈이나 기타 수식도 가능해서 사용편함
스코프!여기도 중괄호를 못벗어난다.
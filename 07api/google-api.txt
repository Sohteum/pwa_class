■ 구글API
  ● 구글API콘솔 접속
    https://console.cloud.google.com/apis (2023.5월 기준)
	약관 전부 동의할것
///////////////////////////////////////////////////////////////////////////////
세계시계만들기
time zone api 라이브러리에서 검색하여 사용누르기
햄버거메뉴-사용설정된 api및 서비스에서 현재 사용하고 있는 api확인가능
https://developers.google.com/maps/documentation/timezone/overview?hl=ko

 https://maps.googleapis.com/maps/api/timezone/json
    ?location=39.6034810%2C-119.6822510
    &timestamp=1331161200
    &key=YOUR_API_KEY


    사용방법 그대로 가져옴

우리는 타임존 아이디가 필요함 이걸 주소창에 넣으면 이렇게 나옴. 결과값으로 객체를 반환
{
   "dstOffset" : 0,
   "rawOffset" : -28800,
   "status" : "OK",
   "timeZoneId" : "America/Los_Angeles",
   "timeZoneName" : "Pacific Standard Time"
}

cdn으로도 제공하고 익스텐션도 있는데  모멘트를 설치 
- npm i moment 
- npm i moment-timezone 
설치하면 패키지제이슨에서 설치확인가능

임폴트할때 꼭 이렇게 써야함
import moment from "moment-timezone";

console.log(
  moment(Date.now()).format('YYYY-MM-DD , HH-mm-ss')
);
 //아무것도 안넣으면 (Date.now)=timestamp또는 '2023-05-04', '2023년5월4일'모두 가능
 //YYYY년MM월DD일 , HH시mm분ss초
 //YYYY년MM월DD일 , H시m분s초 ->절대시 18시
 //YYYY년MM월DD일 , hh시m분s초 A -> 그냥시간 6시 대문자 A는 am, pm해줌
 예시1 : moment(timestamp).format('YYYY-MM-DD일 , HH:mm:ss')
 예시2 : moment('2021-10-09T00:00').format('Y년M월D일 , H시m분s초')
 예시3 : moment(Date.now()).tz('America/Los_Angeles').format('YYYY년M월D일 , hh시mm분ss초 A')
 예시4 : moment(Date.now()).tz('America/Los_Angeles').format('YYYY년M월D일 , hh시mm분ss초 dddd A') //dddd는 요일을 풀로 리턴
 예시4 : moment().day() //요일을 숫자로 리턴

/////////////////////////////////////////////////////////////////////////////////
  ● 프로젝트만들기 실행
  ● 프로젝트명 입력후 create실행
  ● 상단의 프로젝트 선택 메뉴 / 해당프로젝트 이동
  ● 사용자 인증정보 만들기
    ▶ 왼쪽 상단의 탐색메뉴(햄버거메뉴) / api서비스 / 사용설정된 api 서비스 이동
    ▶ 사용자 인증정보 버튼 클릭
    ▶ 상단의 사용자 인증정보 만들기 버튼 클릭
    ▶ 해당 API키를 클릭해서 상세페이지 이동 
    - 웹사이트 선택 
    - 개발 완료 후 웹사이트 제한사항 add(추가할것)//아무나 쓰면 안되잖아
    - 구글api는 소스보기를 하면 다 나옴 그래서 여기서 설정을 해주어야함
    ▶ 애플리케이션 저장사항옵션 http리퍼러 설정후 저장
  ● 결제계정
    ▶ 왼쪽 상단의 탐색메뉴(햄버거메뉴) / 결제
    ▶ 결제계정연결 / 결제계정만들기
    ▶ 1단계 계정 정보, 국가 및 사용용도 입력
    ▶ 2단계 계정 정보, 고객정보 결제정보 입력
    ▶ 3단계 계정 정보, 2단계 계정 정보와 동일하게 입력
    ▶ 추가 질문에 대한 답변 입력 
    ▶ 왼쪽 상단의 탐색메뉴(햄버거메뉴) / 결제 / 계정관리 프로젝트 연결확인
    ▶ 결제 계정에서 생성된 결제 계정 선택 
  ● 프로젝트를 제거할경우
    ▶ 우측상단의 계정설정 및 유틸리티 아이콘 / 프로젝트설정 페이지로 이동
    ▶ 종료버튼 클릭
    ▶ 프로젝트 id입력 후 삭제

■ 지도관련 api 
햄버거메뉴 > api및 서비스 > 라이브러리
  ● 라이브러리 페이지로 이동
    ▶ Maps JavaScript API (지도및 위경도 제공) 이동 후 사용버튼 클릭
      샘플코드 예시)
      <script src="https://maps.googleapis.com/maps/api/js?key=발급받은api키&callback=fn"></script>

      const fnInitMap = (lat, lng) => {
        let map = new window.google.maps.Map(document.getElementById('map'), {
          center: { lat: lat, lng: lng },
          zoom: 8
        })//map
        let center = { lat: lat, lng: lng }
        let marker = new window.google.maps.Marker({position : center, map : map , icon :'./img/marker.png'});
        let marker = new google.maps.Marker({position: center, map: map}); //이거
        map.addListener('click', function (e) {
          let latlng = {
            lat: e.latLng.lat(),
            lng: e.latLng.lng()
          }
        })//click
      }//fn

      initMap(lat,lng)

    ▶ Geocoding API (주소정보등을 제공) 이동 후 사용버튼 클릭 
      샘플코드 예시)
      var geocoder = new window.google.maps.Geocoder;
      var latlng = {
        lat: 위도,
        lng: 경도,
      };
      geocoder.geocode({ 'location': latlng }, function (results, status) {
        if (status === "OK") {
          console.log(results);
        } else {
          console.log("주소를 못 가지고 왔습니다");
        }
      });
///////////////////////////////////////////////////////////////////////////////////////////////////////////      
■ 유튜브 API
  ● 라이브러리 페이지로 이동
    ▶ YOU TUBE DATA API V3 이동 후 사용버튼 클릭
    ▶ 가이드 및 문서 참조 (언어버전을 영어로 설정하길 권장)
      ▷ guide / youtube data api / reference
      ▷ 유튜브 검색 리스트 
        - search / list  메뉴 클릭
        - try this apis 버튼 클릭
        - part (snippet)
        - maxResults (출력갯수)
        - q (검색어)
        - type (video)
        - Google OAuth 2.0 체크해제
        - show code 옵션중 http 출력,
        - [YOUR_API_KEY]를 apikey로 변경 (괄호는삭제)  
      ▷ 인기 목록
        - Videos / list 메뉴 클릭
        - try this apis 버튼 클릭
        - part (snippet)
        - chart (mostPopular)
        - Google OAuth 2.0 체크해제
        - show code 옵션중 [YOUR_API_KEY]를 aipkey로 변경 (괄호는삭제)  
      ▷ 비디오 정보
      https://www.googleapis.com/youtube/v3/videos?part=snippet&id={VIDEO_ID}&key={YOUR_API_KEY}  
  ● 라이브러리 삭제
    ▶ 상단 프로젝트 메뉴에서 프로젝트 선택
    ▶ 리소스관리페이지 아이콘 클릭
    ▶ 프로젝트 아이디 입력후 종료클릭
///////////////////////////////////////////////////////////////////////////////
■ 구글 인증
  ● 구글 API 신청
    ▶ 프로젝트 생성
      - https://console.cloud.google.com/apis
      - 프로젝트만들기 실행
      - 프로젝트명 입력후 create실행
      - 생성 대기 후 프로젝트 선택
    ▶ APIKEY 생성  
      - 좌측 콘솔메뉴 / 사용자인증정보
      - 상단메뉴의 사용자 인증 정보 만들기클릭 / API키 클릭
    ▶ OAuth Client ID 동의 화면
      - 상단의 사용자 인증 정보 만들기 링크 클릭 / OAuth 클라이언트 ID 만들기
      - OAuth 동의화면 구성
        · (앱게시는 개발 완료 후 설정 후, 승인 uri와 리디렉션 uri의 https 도메인으로 변경)
        · 외부
      - 앱정보
        · 앱이름 
        · 지원이메일
        · 개발자 연락처 이메일
      - 범위설정 (저장후계속)
      - 테스트사용자 (저장후계속)
    ▶ OAuth Client ID 생성
      - 상단의 사용자 인증 정보 만들기 링크 클릭 / OAuth 클라이언트 ID 만들기
      - 어플리케이션 유형 선택
      - 사용자인증정보 페이지 이동(왼쪽대시보드메뉴)
      - OAuth Client ID  생성 (상단의 사용자 인증 정보 만들기 링크 클릭)
    ▶ URI 설정  
      ! 개발이 완료된 후 디플로이 할 도메인을 반드시 추가해야 함,
      ! 개발 완료 후 OAuth동의화면에서 앱게시 후 승인 uri와 리디렉션 uri를 https 도메인으로 변경
      ! 가급적 파이어베이스콘솔 / Authenthication / 승인된도메인 과 동일하게 설정
      - 사용자 인증정보 클릭 / OAuth 2.0 클라이언트 ID / 해당아이디 클릭
        · 승인된 자바스크립트 원본 uri 
            예) http://localhost
        · 승인된 리디렉션 uri (테스트 단계에서도 https만 사용 가능)
          승인도메인/__/auth/handler를 사용
          예) https://파이어베이스프로젝트ID.firebaseapp.com/__/auth/handler
    ▶ 테스트 사용자 추가
      - 테스트에 사용할 구글 계정을 등록  



      순서도
      
      시작(App.js)
      -위경도구하기
      -타임존구하기
      -위경도를 이용해 주소정보 받아오기
      -위경도를 이용해 날씨정보 받아오기
      -위경도를 이용해 지도출력

      지도를 클릭(CompMap.jsx)
      -위경도구하기
      -타임존구하기
      -위경도를 이용해 주소정보 받아오기
      -위경도를 이용해 날씨정보 받아오기
      -위경도를 이용해 지도출력

      데이터출력(CompCurrent, CompDaily, CompHourly)
      -fnSetWeatherInfo(카테고리를 넣는거.현재날씨 또는 일자별 날씨등. timeZone) 데이터 가공
      (시간, 날짜, 온도, 등..) ->출력
      -이제 이 함수에 타임존을 먹여줘야 세계시를 받아올 수 있음







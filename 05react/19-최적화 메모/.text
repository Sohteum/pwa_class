최적화의 세가지 방법

메모(무조건 씀)
목적 : -컴포넌트 재 렌더링을 방지
적용방식 : 컴포넌트와 상관없는 부모의 스테이트값이(상태값이) 변경시 재 랜더링을 방지할 수 있다.(랜더링을 안할수록 빨라지니까.)


유즈콜백(거의안씀)
유즈메모(가끔씀)






서버사이드렌더링ssr
- 우리가 흔히 보는거
한방에 전부 다운로드받음. 처음 접속할때 한번에
페이지를 자꾸 새로 찾고 까먹고 찾고, 요청할때마다 다시 찾기때문에 시간이 많이걸림
-접속대기시간이 짧다.



클라이언트사이드렌더링cls
- 뷰나 프레임워크방식.
리액트나 뷰. spa 싱글페이지앱?????
페이지의 주소가 바뀔때마다 페이지의 새로고침이 일어남
이미지, html문서를 처음부터 다시 다운받음
- 클라이언트가 들어오자마자 잠깐만 하고 멈춘다음에 페이지를 다 외움. 그리고 클라이언트가 요ㅍ청할때마다 외운걸 바로 말해줌
-단점 : 첫 로딩속도가 느리다.
메모리 부하를 많이차지함. 그래서 최적화가 중요함.

그래서 넥스트제이에스 쓰는거래



부모가 먼저 실행 완성은 자식이 먼저


업데이트의 개념
언제일어나?state가 병경될때 일어나. 이 스테잇을 사용하는 애들만 업뎃이 됨.
근데 그걸 사용하는 애가 아웃풋인데 전부다 업뎃이 됨.
왜? 부모가 만들었잖아.
쓸데없이 지금 자식 두개가 업뎃이 됨. 랜더링이 필요없는 상황. 만약이게 용량이 아주 큰 동영상이라면 문제가 되겠지

프롭스로 받았으면 어쩔수없지만 그게 아니라면 막을 수있음
컴포넌트를 찾아 들어가서 맨 하단을 괄호로 쌈
React.memo(CompTitle);

다 하면 메모리의 부담을 증가시킴
필요한 애들만 쓰라고 권장함.
광고....상태값이 변하지 않는것들.꼭 메모 해주기



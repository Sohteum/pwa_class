{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* 이 위쪽은 임폴트하는 용도로 사용이 됨  */\n\nimport { useState } from \"react\";\n//모듈즈안에있는것들은 경로없이 불러올수있음 .js는 생략된것.{}니까 익스폴트한거지. 함수야.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* 이걸 컴포넌트라고 함 */\n  let [_number, _setNumber] = useState(1);\n\n  // let fnClickHandler = () => {\n  // }//fnClickHandler\n  function fnClickHandler() {\n    _setNumber(++_number);\n    console.log(_number);\n    //함수인데 리액트만 사용하는 함수를 '훅스'라고 한다.\n    //n이라는 스테잇 변수를 만드는데 그게 초기값이1 하나 바뀌면 연동된 모든것이 바뀐다. \n\n    // ++number\n    // document.querySelector(`.output`).innerHTML = number 이건 의미가 없다...\n  } //fnClickHandler\n  //일반적인 함수를 사용할때는.내가만든 함수를 사용할때는 function()더 많이쓴다\n  //내가 클릭할때는 이미 가상돔이 진짜로 된 이후야. 이 함수는 클릭을 했을때 실행돼. 실제가 되었다는 뜻이지. 그래서 클릭을 할수있는거잖아\n  //상태관리. 변수가 하나 바뀌면 그게 들어간, 심지어 연관된 애들이 모두다 바뀐다. 그렇게 만들자 그게 상태관리야 그게 state. usestate\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"1\\uC529\\uC99D\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fnClickHandler,\n      children: \"\\uC99D\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"output\",\n      children: [\"\\uD604\\uC7AC\\uAC12 : \", _number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"S3wN2UpI7r8uXh5pV+Jq+eDhINk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_number","_setNumber","fnClickHandler","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["/* 이 위쪽은 임폴트하는 용도로 사용이 됨  */\r\n\r\nimport { useState } from \"react\";\r\n//모듈즈안에있는것들은 경로없이 불러올수있음 .js는 생략된것.{}니까 익스폴트한거지. 함수야.\r\n\r\nfunction App() { /* 이걸 컴포넌트라고 함 */\r\nlet [_number, _setNumber] = useState(1)\r\n\r\n  // let fnClickHandler = () => {\r\n  // }//fnClickHandler\r\n  function fnClickHandler() {\r\n    _setNumber(++_number)\r\n    console.log(_number);\r\n     //함수인데 리액트만 사용하는 함수를 '훅스'라고 한다.\r\n    //n이라는 스테잇 변수를 만드는데 그게 초기값이1 하나 바뀌면 연동된 모든것이 바뀐다. \r\n\r\n    // ++number\r\n    // document.querySelector(`.output`).innerHTML = number 이건 의미가 없다...\r\n  }//fnClickHandler\r\n  //일반적인 함수를 사용할때는.내가만든 함수를 사용할때는 function()더 많이쓴다\r\n  //내가 클릭할때는 이미 가상돔이 진짜로 된 이후야. 이 함수는 클릭을 했을때 실행돼. 실제가 되었다는 뜻이지. 그래서 클릭을 할수있는거잖아\r\n  //상태관리. 변수가 하나 바뀌면 그게 들어간, 심지어 연관된 애들이 모두다 바뀐다. 그렇게 만들자 그게 상태관리야 그게 state. usestate\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>1씩증가</h1>\r\n      <button onClick={fnClickHandler}>증가</button>\r\n      {/* <button onClick={()=>{fnClickHandler(number);fn2();fn3();}}>증가</button> 이거랑 위랑 같은거.이렇게 함수를 많이 호출할때는 이게 필요함*/}\r\n      {/* 여기서는 저기 위에서 다큐먼트쿼리셀렉터못씀 밑에있는건 가상이니까 아직 만들어지지않은거. 나중에 버추얼돔이 만들어지고나면 사용가능  이건 청사진같은거야. 아직 만들어지지않은.  그래서 온클릭이라는 속성을 사용한다. */}\r\n      <p className=\"output\">현재값 : {_number}</p>\r\n      {/* 클래스는 사용불가 스크립트문법이라서. */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAE;EACjB,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA;EACA,SAASS,cAAcA,CAAA,EAAG;IACxBD,UAAU,CAAC,EAAED,OAAO,CAAC;IACrBG,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;IACnB;IACD;;IAEA;IACA;EACF,CAAC;EACD;EACA;EACA;;EAGA,oBACEL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACbd,OAAA;MAAQe,OAAO,EAAER,cAAe;MAAAG,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAG5Cd,OAAA;MAAGgB,SAAS,EAAC,QAAQ;MAAAN,QAAA,GAAC,uBAAM,EAACL,OAAO;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA,gBAExC;AAEP;AAACV,EAAA,CA7BQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
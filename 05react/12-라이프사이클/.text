life-cycle: 생명주기

변수는 리렌더링 즉 엡이 업데이트 된 후의 값을 말함. 업데이트 될때 1 증가해
콘솔은 렌더링 되기 전의 값


*컴포넌트 밖의 코드는 초기 1회만 실행됨(화면의 출력여부와는 상관없음)
*State변경시 (컴포넌트 안쪽만) 리렌더링 
*state값은 업데이트 후에 변경이 일어남
*컴포넌트 업데이트 순서
시작 : 부모컴포넌트 -> 자식컴포넌트
완료 : 자식컴포넌트 -> 부모컴포넌트


라이프사이클 훅스 : useEffect
  useEffect(() => {
    =업데이트가 될때마다 즉.화면이 리렌더링될때마다 스테잇이 변경될때마다. (새로 코드를 읽음 컴포넌트안쪽만)
  })

useEffect(() => {   (디펜던시유즈이펙트)
    =최초 업데이트가 될때 한번 실행될 코드(처음에 화면에 나왔을때), 업데이트랑 상관없이 최초한번실행
  },[])

useEffect(() => {   (언마운티드)
  return (()=>{ })리턴안에 콜백함수를 넣겠다는거지...죽기전에할일. 컴포넌트가 사라질때 실행될 코드
  },[])

리액트에서는 셋인터벌할려면 증감연산해야함.
셋인터벌 여러번 클릭하면 누적되어서 빠바박 나옴




전체적으로 다 콘솔을 찍어보면 아웃사이드를 먼저 읽는데,
자식을 먼저 찾고 그다음 부모가 나온다

아웃사이드말고 이제 인사이드가 중요함

스테잇 하나 바뀌면 컴포넌트가 모두 렌더링되는데 부모가 먼저 실행이 되고 자식들의 인사이드를 읽는다.
코드가 리랜더링 될때는 부모부터. 
근데 문제는. 시작은 부모먼저인데 완성은 거꾸로임

부모가 먼저 랜더링을 시작했는데 완성은 자식이 먼저 됨
리렌더링. 완성이 되었을때 진자 된건지 알아볼려면 완성이라는 말을 알아야하는데. 업데이트가 완료되었을때 라는 말을 알아야함


우리가 눈으로 보는건 완료된 시점을 보는것.
업데이트가 완료된 시점이라는 말이 useEffect라는 훅스.

app의 useEffect가 가장 마지막에 일어난다는게 중요함

부모가 먼저 시작은 하는데 자식들이 완료가 된 후에 부모가 완료하는것

비동기에서 자식들이 먼저 완성이 되어버림 그래서 이 개념을 알고있는것이 중요함

비동기 전까지는 항상 useEffect밖에서 변수를 만들어야함. 부모가 가장 마지막에 일어나니까 여기서 마지막에 선언을 하면 자식들이 찾을 수가 없음



렌더링 할때마다 인터벌을 추가한다.

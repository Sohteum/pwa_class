컴포넌트

반복적인 구조를 줄여주는것.

여기서 폼이 너무 많으면 넘버1, 2를 계속 만들어야하잖아.
스테잇이 엄청나게 많아지는것.

파일을 별도로 하나 만들어줘야함.
무조건 src폴더 안쪽으로 컴포넌트s 폴더를 만들고 그 안에 폴더 하나 만들어냄 
컴포넌트는 무조건 첫글자를 대문자로 만듦. 이건 컴포넌트라고 알려줄려고
(App.js도 컴포넌트니까 대문자인거야)

근데 확장자는 js하거나 jsx로 함 jsx라고 만든다면 확장자를 보고 찾기 편하니까.

중간에 이름 바꾸거나 폴더위치를 변경하지 말것. 그럼 꼬일수있음
rsc 혹은 rsf누르면 됨. 그리고 탭키


만약 내가 이름을 바꾸고 싶다면 원래 앱.js에서도 바꾸고 sum.jsx에서도 그렇고 다 바꿔야함.




다른부모한테서 만들었잖아. 그래서 쓸수가없어. 그러니까 위에있는애들도 다 가져가야함.

그래서 컴포넌트설계를 처음부터 하는것이 중요함. 안그러면 계속 바꿔줘야하니까.

스테잇관리랑 컴포넌트설계 

컨트롤 케이를 누르고 둘다떼고 s를 누름 그러면 다 저장됨. 이거는 혼자할때만 사용하자.


컴포넌트를 하나 더 만드니까 정답 얼럴트가 안나옴.

우리가 만든애 둘다 이름이 같잖아.
쿼리셀렉터로 찾으면 첫번째를 찾잖아.
그래서 첫번째만 정답 입력하고
두번째는 오답 입력해도 정답이 나옴
쿼리는 문서 전체에서 찾는거.

유즈레프는 이 컴포넌트 안에서 찾는거야.
그래서 유즈레프를 사용해야 함.




만약에 스테잇을 앱에다가 만들면 다 같은값이 나와버림
그래서 썸에서 스테잇을 사용하는거야

합계는 개개인이 하는거아니고 모든애들이 관여되어있으니까 
하나를 가지고 다같이 써야하니까 앱에다가만드는것임

props부모가 만든 스테잇을 자식이 쓰고싶을때
내려준다고 함.드릴링한다고 함.
그 반대는 리프팅이라고 함. 부모가 자식한테서 가져올때.

그래서 그 뒤에 더 많은 훅스가 나옴. 왜냐면 이게 쫌 짜증이 남.
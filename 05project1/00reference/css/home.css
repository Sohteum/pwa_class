.home_visual {
  position: relative;
  background-color: black;
}

.home_visual>.slick-list {
  height: 100%;
  cursor: grab;
}

.home_visual>.slick-list:active {
  cursor: grabbing;
}

.home_visual>.slick-list>.slick-track {
  height: 100%;
}

.home_visual>.slick-list>.slick-track figure img {
  width: 100%;
  height: 100%;

  object-fit: cover;
  object-position: center;
}

.home_visual figure {
  position: relative;
}

.home_visual figure figcaption {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 80%;
  max-width: 400px;
  text-align: center;
  color: #FFF;
}

.home_visual figure figcaption h5 {
  margin-bottom: 10px;
  font-size: min(7vw, 3.5em);
  /* 뷰포트로 적용하면 화면 너비에 따라 글자의 크기가 바뀜
  100vh화면 높이랑 동일하게 적용한다던지
  작은 화면일때는 7vw큰화면일때는 3.5em */
  font-weight: 700;
  text-transform: uppercase;
  /*   width: 90%;
  max-width: 1000px;
  width: min(90%,1000px); */
}

.home_visual .slick-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 1;
  color: #FFF;
  font-size: 2em;
  transition: all 0.5;
  opacity: 0.5;
}

.home_visual .slick-arrow:hover {
  opacity: 1;
}

.home_visual .slick-dots {
  display: flex;
  justify-content: center;
  position: absolute;
  width: 100%;
  bottom: 20px;
}

.home_visual .slick-dots li {
  margin: 0 7px;
}

.home_visual .slick-dots li button {
  display: block;
  /* 인라인블럭이라서 위가뜸. */
  width: 10px;
  height: 10px;
  font-size: 0;
  background-color: #FFF;
  border-radius: 50%;
  opacity: 0.5;
  transition: all 0.5s;
}

.home_visual .slick-dots li.slick-active button {
  opacity: 1;
  background-color: var(--point-color);
}


.home_visual .slick-prev {
  left: 20px;
}

.home_visual .slick-next {
  right: 20px;
}

.home_visual #particles-js {
  pointer-events: none;
  /* 건드릴 수 없도록 막는 이벤트 */
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  mix-blend-mode: overlay;
  z-index: 1;
}

@media screen and (min-width:1000px) {
  .home_visual {
    height: 600px;
  }
}

@media screen and (max-width:1000px) {
  .home_visual {
    height: 300px;
  }
}

/* motion */

.home_visual figure {
  overflow: hidden;
}

.home_visual figure figcaption h5,
.home_visual figure figcaption p {
  opacity: 0;
  transition: all 1s;
}

.home_visual figure figcaption h5 {
  transform: translateX(-100%);
}

.home_visual figure figcaption p {
  transform: translateX(100%);

}

.home_visual figure img {
  transform: scale(1.2);
  filter: grayscale(1) brightness(0.7);
  transition: all 4s;
}

.home_visual figure.slick-active figcaption h5,
.home_visual figure.slick-active figcaption p {
  /* 현재 화면에 나오는 액티브 된 화면 */
  opacity: 1;
  transform: translateX(0);
}

.home_visual figure.slick-active img {
  transform: scale(1);
  filter: grayscale(0) brightness(0.8);
}


/* feature */
.feature {
  padding: 40px 0;
  /* 백그라운드넣을일있을수있으니까 패딩으로 */
}

.feature ul {
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto;
  width: min(95%, 1200px);
}

.feature ul li {
  display: flex;
  flex-wrap: wrap;
  box-sizing: border-box;
  padding: 10px;
}

.feature ul li a {
  /*   display: block; 쓸모없어짐 */
  padding: 5px;
  background-color: var(--main-color);
  border: 1px solid var(--sub-color);
}

.feature ul li a figure {
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.feature ul li a figure figcaption {
  position: relative;
  /* 이미지깔리지않게 */
  flex: 1;
  padding: 10px;
  background-color: var(--dark-color);
  height: 100%;
  color: #FFF;
  /* 여기서 이렇게 주면 figcaption이 다 달라짐. 글자의 길이가 다 다르니까.
  이걸 같게 하려면 ul안에 li의 크기는 다 같음. 플렉스 안에 들어가면 다 같아지니까. 그럼 li 안에 다시 플렉스를 해줌
  그럼 이제 부모높이를 감지가능 
  그럼 여기서 또 플렉스가 되어야 다시 애들이 늘어날거야 */
}

.feature ul li a figure figcaption h3 {
  margin-bottom: 5px;
  padding-bottom: 5px;
  border-bottom: 1px dotted #FFF;
  font-weight: 500;
  font-size: 1.1em;
}

.feature ul li a figure img {
  width: 100%;
}

@media screen and (min-width:1000px) {
  .feature ul li {
    width: 25%;
  }
}

@media screen and (min-width:600px) and (max-width:1000px) {
  .feature ul li {
    width: 50%;
  }
}

@media screen and (max-width:600px) {
  .feature ul li {
    width: 100%;
    margin: 0 auto;
  }
}

/* hover */

.feature img {
  transition: all 0.5s;
}

.feature a:hover img {
  transform: scale(1.2);
}

.feature a {
  transition: background-color 0.5s;
}

.feature a:hover {
  background-color: var(--dark-color);
}

.feature a figcaption {
  transition: all 0.5s;
}

.feature a:hover figcaption {
  background-color: var(--point-color);
}

/* latest */

.latest .news {
  background-color: #DDD;
  padding: 20px 0;
}

.latest .news .center {
  margin: 0 auto;
  width: min(95%, 1200px);
}

.latest .news .center h3 {
  font-weight: 600;
  color: var(--main-color);
}

.latest .news .center .rolling {
  overflow: hidden;
  /* 높이를 안주면 오버플로우 안먹음 */
  height: 23px;
  color:var(--dark-color);
}

.latest .news .center .rolling ul {
  animation: rolling 10s linear infinite;
}

/* .latest .news .center .rolling ul:last-child {
  margin-top: -1px;
} 애니메이션이 차이날때 이런식으로 맞춰줄 수 있음 천천히하면 티 잘 안남 */

@keyframes rolling {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-100%);
  }
}

@media screen and (min-width:700px) {
  .latest .news .center {
    display: flex;
  }

  .latest .news .center h3 {
    margin-right: 20px;
  }
}

@media screen and (max-width:700px) {
  .latest .news .center {}
}